#_preseed_V1
# Preseed for Debian 12 Bookworm, btrfs
# partitioning_style: LVM
# boot_mode: EFI
# SPDX-FileCopyrightText: 2021-2024 niphi
# SPDX-License-Identifier: MIT

### Localization
d-i debian-installer/language string en
d-i debian-installer/country string DE
d-i debian-installer/locale string C.UTF-8
d-i keyboard-configuration/xkb-keymap select de

### Network configuration
# Please be aware that these settings do not work when preseeding via URL
# because the network setup has to happen before this file will be read!

# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# To pick a particular interface instead:
#d-i netcfg/choose_interface select eth1

# Any hostname and domain names assigned from dhcp take precedence over
# values set here.
# When preseeding from url, defaults to 'debian'
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
#d-i netcfg/hostname string somehost

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### Account setup
d-i passwd/root-login boolean true
d-i passwd/make-user boolean false

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or hashed, * means disabled root password
d-i passwd/root-password-crypted password *

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Etc/UTC
d-i clock-setup/ntp boolean true

### Partitioning

# Select disk to partition. If the system has only one disk the installer will
# default to using that. If multiple disks exist, you may be asked to partition
# the disk: There will be multiple options with "Guided, use the entire disk",
# one without any special extras, one with LVM and one with Crypto+LVM. You must
# choose the option that matches the selection partman-auto/method below, as
# this questions seems to override this preseed value (tested for regular and
# LVM). After this question the installer should proceed automatically as a
# partition scheme was already given.
#d-i partman-auto/disk string /dev/sda

# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm
d-i partman-auto-lvm/guided_size string max
d-i partman-auto-lvm/new_vg_name string debvg

# Nuke old stuff
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true

# Confirm LVM
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# TODO: Dynamic recipe generation with this
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"

# Partman custom recipe. Upstream dokumentation is avilable at
# https://salsa.debian.org/installer-team/debian-installer/blob/master/doc/devel/partman-auto-recipe.txt
# Some notes from me are also at $REPO_ROOT/partman-doc.md
# Recipe is inspired from d-i/packages/partman-auto/recipes-arm64/atomic
# I do not understand all parameters, so this is cargo cult "programming"...
# Important things that are wrong in the documentation at the time of writing:
# - 100% (normally as much as the machine has RAM) may be capped to some smaller
#   value (debconf partman-auto/cap-ram), default is 1024 MB.

# Partition Scheme:
# - EFI system partition
# - /boot partition (separate, because LVM)
# - /root, partman can only create one subvolume @rootfs
# - swap
d-i partman-auto/expert_recipe string   \
    efi-gpt-btrfs-atomic ::             \
    512 1024 1024 free                  \
        $iflabel{ gpt }                 \
        $reusemethod{ }                 \
        method{ efi }                   \
        format{ } .                     \
    512 1024 1024 ext4                  \
        $defaultignore{ }               \
        $primary{ }                     \
        $bootable{ }                    \
        label{ deb-boot }               \
        method{ format }                \
        format{ }                       \
        use_filesystem{ }               \
        filesystem{ ext4 }              \
        mountpoint{ /boot } .           \
    1000 10000 -1 btrfs                 \
        $lvmok{ }                       \
        lv_name{ rootfs }               \
        label{ deb-root }               \
        method{ format }                \
        format{ }                       \
        use_filesystem{ }               \
        filesystem{ btrfs }             \
        mountpoint{ / } .               \
    100% 200% 300% linux-swap           \
        $lvmok{ }                       \
        lv_name{ swap }                 \
        method{ swap }                  \
        format{ } .                     \

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
# true means Debian will always boot with EFI even if BIOS-mode OSs exist.
d-i partman-efi/non_efi_system boolean true
# Ensure the partition table is GPT - this is required for EFI or BIOS/GPT
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt

# When disk encryption is enabled, skip wiping the partitions beforehand.
#d-i partman-auto-crypto/erase_disks boolean false

### Apt setup
d-i apt-setup/non-free-firmware boolean true
d-i apt-setup/non-free boolean false
d-i apt-setup/contrib boolean false
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org

# Uncomment this to add multiarch configuration for i386
#d-i apt-setup/multiarch string i386

### Package selection
tasksel tasksel/first multiselect standard, ssh-server

# Individual additional packages to install
#d-i pkgsel/include string openssh-server build-essential

popularity-contest popularity-contest/participate boolean false

### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# Due notably to potential USB sticks, the location of the primary drive can
# not be determined safely in general, so this needs to be specified:
#d-i grub-installer/bootdev  string /dev/sda
# To install to the primary device (assuming it is not a USB stick):
d-i grub-installer/bootdev  string default

### Finishing up the installation
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# Install SSH pub key, print IP addr before login promt
# Installed system is mounted at /target
d-i preseed/late_command string \
    mkdir -p /target/root/.ssh/ \
    && chmod u=rwx,g=,o= /target/root/.ssh/ \
    && echo "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAII0HsSMvH0VNPLrXOezD3R2mNR294DZImcGABXPr8tin niphi@lapis-linux" >>/target/root/.ssh/authorized_keys \
    && sed -i '2 i Network IPv4=\\4  IPv6=\\6' /target/etc/issue
